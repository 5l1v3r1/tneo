%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/srv/www/vhosts/online-convert.com/save/queued/8/a/1/8a191f09b3edb1ad1bcc78a382de7799/intermediate1/o_b29c5b615fd65b06.eps)
%%CreationDate: (2014-09-27T16:48:58+02:00)
%%BoundingBox: -0 -0 24 24
%%HiResBoundingBox: 0 0 24.297 24
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
DisplayImage
0 0
24.297 24.297
12
24 24
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3067B13067B13067B13067B13067B13067B1
3067B13067B13067B03167B0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF3067B13067B13067B13067B13067B13067B13067B13067B13067B13067B1
3068B23069B33169B2376DADFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3067B13067B13067B13067B13067B13067B13067B13067B13069B22F6AB42E6DB54680AC6D9A9C
2A72B92D6DB5336DB1EAE828EAE828FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3167B13067B13067B1
3067B13067B13067B13067B13067B12F6BB42975BB297DC02A7FC2609EAAFFF45FC9D6775E98A6
2973B93573B0EAE828EAE828FFFFFFFFFFFFFFFFFF3169B1306AB32F6CB4306AB43068B23067B1
3067B13067B13069B22A74BA95BD92FFF45FFFF45FFFF45FFFF45FFFF45FFFF45FC9D576508BA8
3874AEEAE828FFFFFFFFFFFF3067B03069B32B70B7A3BC5D759C803069B33067B13067B13067B1
306AB42A7CBFC9DA74FFF45FFFF45FFFF45FFFF45FFFF45FFFF45FFFF45FF1EC64487EAA3E72A8
FFFFFFFFFFFF3067B12F6CB42876BBECE92867978B2F6AB43067B13067B13067B12F6BB42A7DC0
EFEC5FFEF358C9DD7BD7E173FFF45FFFF45FF1EC6593B78E367BB32F6BB43067B1FFFFFF3067B1
3067B12D6EB6589597ECE9284281A6306AB33067B13067B13067B12E6CB53683B9F9F15BFAF155
2B88C8609FAAFFF45FAEC7824387B02B70B72F6BB43068B23067B13067B13067B13067B12B70B7
7EAA7CD3DB3A2A71B83069B23067B13067B13067B12D6EB65C98A8F9F163C5D47A2877BC4581AC
4681AD2B70B72E6CB43068B23067B13067B13067B13067B13067B13068B22973B9AFC757AEC656
2A71B8306AB43068B23067B13067B12B70B791B692F9F165AAC4862B70B7306AB3316AB3316AB4
3169B33068B23068B23069B23068B23067B13067B13069B32975BAD3DB3A8BB4742878BC2A71B7
306BB43067B13068B22973B9B8CD81F9F16583AC952E6DB53068B2306AB451859B457EA42F6CB5
2F6CB55D8D923B74AC3068B23067B13069B3357BB0ECE928C8D544BBCE4DBBCC4C467DA43068B2
3069B32876BBD2DB76F9F1655C94A52F6BB43068B22D6FB6D3DA3A7EA87A2A72B84181A6ECE928
4F889C306AB33067B13068B23976AD5A91945992965991955B8F932F6CB53068B2306AB32879BD
F9F165F9F1652974BA306AB33068B2367AAFECE9285B999A2879BD659D8FECE9282974B9306AB3
3067B13067B13069B32F6BB42F6CB42F6CB4306BB4316AB33068B22F6CB45C98A7F9F165DEE270
2A71B83069B23069B3599295ECE9286AA4935C9B9CA4C262C7D5442972B93069B33067B13067B1
3067B13068B23069B3306AB4487EAA3978B12C70B72972B985B198F9F164B7CB802C6FB73068B2
306BB47DA87AE0E231BCCE4EBCCE4EE0E231AFC7572B70B73168B23067B13067B13068B22E6DB5
2A71B82875BB94B78EF1EC6587B2962B85C5A1C48AF9F15F90B58F2D6DB53068B22F6CB596B768
BBCE4D287ABE287BBEC8D5448AB1722E6DB53168B13067B13067B12F6BB4A2BB85C9D576CAD777
E4E66BFFF45FFFF45FE4E86DE2E762FAF1525C97A42F6CB43068B22E6DB5BACC4C89B0722873B9
2875BAECE9285993962F6BB43369B0FFFFFF3067B12E6DB5C9D475FFF45FFFF45FFFF45FFFF45F
FFF45FFFF45FFFF45FFEF35D508CA8306AB33067B1306BB4BCCA4B67968A2D6EB650869BBCCB4B
447FA53169B2EBE828FFFFFF376DAD2F6CB5CAD375FFF45FFFF45FFFF45FFFF45FFFF45FFFF45F
CAD7775090AC2C6FB73068B23067B13068B22F6CB4306BB43069B3306AB42F6CB4306AB4386DAC
FFFFFFFFFFFFEAE828356DB02C6FB62875BA2879BD95B98FFFF45FCAD6775E98A62974BA2D6EB6
3069B23067B13067B13067B13067B13067B13067B13067B13067B13168B0FFFFFFFFFFFFFFFFFF
FFFFFFEAE828326AB1306AB32E6CB57BA1956C9C9D2974BA2D6EB63069B33067B13067B13067B1
3067B13067B13067B13067B13067B13067B13067B1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF3067B03067B13069B2316AB33069B33067B13067B13067B13067B13067B13067B13067B1
3067B13067B13067B13067B1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3067B03067B13067B13067B13067B13067B13067B13067B13067B13067B13067B13067B13067B1
3067B1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
3067B13067B13067B13067B13067B13067B13067B13067B13067B13067B1FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
