
= tneo dev / how to release =

  * recheck plans page: probably you have already implemented something?
  * make sure the working dir is clean.
  * modify changelog: move everything from "_current development version_" to the new release section, specify release date.
  * make sure changelog does NOT containt "_current development version_", because it should not be present in the release documentation.
  * from the repo:
  {{{

  $ git commit -a -m "Update changelog for the release vX.XX"
  $ git checkout stable
  $ git merge master
  $ git tag vX.XX
  $ git checkout master

  }}}
  
  * add 'current development version' in the changelog back
  * commit it:
      `git commit -a -m "Add current dev version to the changelog"`
  
  * publish release docs:
      `$ (cd stuff/doxygen && bash ./publish_doc_release.sh vX.XX)`
 
  * publish dev docs:
      `$ (cd stuff/doxygen && bash ./publish_doc_dev.sh)`
 
  * add link to docs index.html: 
     * `$ cd stuff/doxygen/dfrank.bitbucket.org/tneokernel_api`
     * in the index.html, add link to new vX.XX dir docs
     * `$ hg ci -m"index.html : added link to docs vX.XX"`
 
  * push docs: `$ hg push`
  * cd back to the root of the tneo repo: `$ cd ../../../..`
  * create downloadable archive: `$ (cd stuff/scripts && bash ./create_version_archive.sh vX.XX)`
  * (optionally) build Keil binaries manually:
     * `$ git checkout vX.XX`
     * `$ mv src/tn_cfg.h src/_tn_cfg.h`
     * `$ cp src/tn_cfg_default.h src/tn_cfg.h`
     * build all needed binaries, copy them to the archive
     * `$ rm src/tn_cfg.h`
     * `$ mv src/_tn_cfg.h src/tn_cfg.h`
     * `$ git checkout master`
  * push repo to the github with tags `$ git push --tags`
  * push the stable branch as well `$ git checkout stable && git push && git checkout master`
  * go to https://github.com/dimonomid/tneo/tags , add release notes for the new tag and upload new archive



