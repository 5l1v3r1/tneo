
= tneokernel dev =

[[how_to_release]]
[[thoughts]]



== Routine ==

   * [ ] Exchange object
   * [ ] probably move _tn_memcpy_uword() to something like `tn_util.c`


=== exchange methods ===

   * tn_exch_create
   * tn_exch_delete
   * tn_exch_link_add
   * tn_exch_link_remove
   * 
   * tn_read
   * tn_write
   * tn_iwrite
   * 
   * tn_lock
   * tn_unlock
   * tn_unlock_and_notify
   * tn_iunlock_and_notify

== Plans ==

   * [ ] Exchange object: see AVIX User Guide & Reference Guide, 6.6.8
   * [ ] Event group: probably, add mask of flags that should be cleared automatically when any task `wait`s for it
   * [ ] Add a destroy callback for each task, this callback (if not NULL) should be called whenever task is terminated with `tn_task_exit()` or `tn_task_terminate()`.
   * [ ] Examples
      * [ ] Separate platform-dependent code from the real example project code
      * [ ] Provide examples for all common system services: timers, queues, etc.
   * [ ] Port to ARM
   * [ ] Probably port to PIC24/dsPIC
   * [ ] Test how much is it slower to use tn_arch_sr_save_int_dis()/tn_arch_sr_restore() instead of TN_INT_DIS_SAVE()/TN_INT_RESTORE()
   * [ ] Optionally, check if stack pointer is overflowed on each context switch.



   

