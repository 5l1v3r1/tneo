/**
\mainpage TNeoKernel overview

TNeoKernel is a compact and fast real-time kernel for the embedded 32/16 bits
microprocessors. It performs a preemptive priority-based scheduling and a
round-robin scheduling for the tasks with identical priority.

TNeoKernel was born as a thorough review and re-implementation of TNKernel 2.7.
The new kernel has well-formed code, inherited bugs are fixed as well as new
features being added, and it is tested carefully with unit-tests.

Currently it is available for PIC32 only, but will probably be ported to other
architectures. Tested on PIC32MX.

API is \ref tnkernel_diff "changed somewhat", so it's not 100% compatible with
TNKernel, hence the new name: TNeoKernel.
                                                                          
TNeoKernel is hosted at bitbucket: http://bitbucket.org/dfrank/tneokernel 

Related pages:

  - \ref foreword
  - \ref quick_guide
  - \ref building
  - \ref pic32_details
  - \ref why_reimplement
  - \ref tnkernel_diff
  - \ref tests_implementation
  - \ref legend

API reference:

  - \ref tn_sys.h "System services"
  - \ref tn_tasks.h "Tasks"
  - \ref tn_mutex.h "Mutexes"
  - \ref tn_sem.h "Semaphores"
  - \ref tn_fmem.h "Fixed-memory blocks pool"
  - \ref tn_eventgrp.h "Event groups"
  - \ref tn_dqueue.h "Data queues"


*/
